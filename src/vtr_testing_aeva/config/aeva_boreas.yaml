/**:
  ros__parameters:
    ############ system configuration ############
    # Data logging
    log_to_file: true
    log_debug: true
    log_enabled: [
        ## ADD LOGGER IDS HERE
        # tactic
        # "tactic",
        # "tactic.pipeline",
        "tactic.module",
        # "pose_graph",
        # "tactic.module.live_mem_manager",
        # "tactic.module.graph_mem_manager",
        # pipeline specific
        # "lidar.pipeline",
        # "lidar.aeva_converter",
        # "lidar.preprocessing",
        # "lidar.preprocessing_doppler",
        "lidar.odometry_preintegration",
        "lidar.odometry_icp",
        # "lidar.odometry_doppler",
        # "lidar.odometry_map_maintenance",
        # "lidar.vertex_test",
        # "lidar.localization_map_recall",
        # "lidar.localization_icp",
      ]
    
    aeriesII: true

    ############ tactic configuration ############
    tactic:
      enable_parallelization: false
      preprocessing_skippable: false
      odometry_mapping_skippable: false
      localization_skippable: false

      task_queue_num_threads: 1
      task_queue_size: -1

      chain:
        min_cusp_distance: 1.5
        angle_weight: 7.0
        search_depth: 5
        search_back_depth: 10
        distance_warning: 30.0

      save_odometry_result: true
      save_odometry_vel_result: true
      save_localization_result: true
      visualize: false

      # localization interval threshold
      # TO DO FIX THIS -- should auto check if running doppler
      # FOR DOPPLER 1 --- SET LOC TRUE AND LOC THRESHOLD TO 1
      use_loc_flag: false  
      loc_threshold: 1   # num frames

      rviz_loc_path_offset: [0., 0., 0.]

    ############ pipeline configuration ############
    pipeline:
      type: lidar

      preprocessing: [
          # preprocessing thread modules
          "conversion",
          "filtering",
          # "doppler_filtering",
        ]

      odometry: [
          # odometry and mapping thread modules
          "preintegration",
          "icp",
          # "doppler", 
          "mapping",
          "vertex_test",
          "memory",
        ]

      localization: [
          # localization thread modules
          "recall",
          "icp",
          "memory",
        ]

      # submap creation thresholds
      submap_translation_threshold: 10.0 # in meters
      submap_rotation_threshold: 30.0 # in degrees

    preprocessing:
      conversion:
        type: lidar.aeva_converter

        visualize: false

      filtering:
        type: lidar.preprocessing
        num_threads: 10

        crop_range: 100.0
        # 
        vertical_angle_res: 0.00349066 # vertical angle resolution in radians (0.12 deg w/ 30 vertical FOV)
        polar_r_scale: 2.0 # 1.0 # polar_r_scale x vertical_angle_res = nearest neighbor search radius for normal computation
        r_scale: 4.0 # scale down point range by this value after taking log, whatever works
        h_scale: 0.25 # scale down yaw(phi) by this value so that vertical resolution ~= horizontal resolution
        #
        frame_voxel_size: 1.0 # grid subsampling voxel size
        filter_normal: true
        #
        num_sample1: 5000 # max number of sample after filtering based on planarity
        min_norm_score1: 0.95 # min planarity score
        #
        num_sample2: 5000 # max number of sample after filtering based on planarity
        min_norm_score2: 0.0 # 0.2 is when the incident angle 5/12 * pi
        min_normal_estimate_dist: 2.0 # minimum distance to estimate normal in meters
        max_normal_estimate_angle: 0.42 # must <1/2, this value will be timed by M_PI
        #
        cluster_num_sample: 5000 # max number of sample after removing isolated points
        min_points_threshold: 0 # min number of points to be considered as valid scan, set to 0 to disable

        visualize: false

      doppler_filtering:
        type: lidar.preprocessing_doppler
        num_threads: 1

        # # aeriesI
        # azimuth_res: 0.00349066         # vertical angle resolution in radians
        # azimuth_start: -0.872665        # -50 deg in rad
        # azimuth_end: 0.872665
        # num_rows: 80                    # num of vertical scan lines  
        # num_cols: 501                   # 100 deg FOV, 0.2 deg resolution
        # min_dist: 20                    # meters
        # max_dist: 150                   # meters
        # const_gyro_bias: [-0.00424229788086775, -0.01544970808768110, 0.00284478234035327]
        # root_path: "/home/katya/Documents/Data/sensor_config/boreas_aeries_i"   # point this to where we find the trained sensor model
        # model_name: "mar8_boreas_lrvar_bp4-rim_vp3-imv-g_r5-150-e5_a0p1_aplat"

        # aeriesII
        azimuth_res: 0.00349066         # vertical angle resolution in radians
        azimuth_start: -0.994838        # -57 deg in rad         
        azimuth_end: 1.09956            #  63 deg in rad
        num_rows: 64                    # num of vertical scan lines
        num_cols: 601                   # 120 deg FOV, 0.2 deg resolution
        min_dist: 20.0                   # meters
        max_dist: 80.0                  # meters
        root_path: "/home/katya/Documents/Data/sensor_config/boreas_aeries_ii"  # point this to where we find the trained sensor model
        model_name: "glen"

        # common to I and II
        active_lidars: [true]                                                 # only one sensor
        active_gyros: [true]  
        downsample_steps: 2                                                   # after image projection 
        bias_input_feat: ["range", "intensity", "medianrv"]
        var_input_feat: ["intensity", "medianrv", "rv_var5"]
        bias_polyorder: 3
        var_polyorder: 2
        median_sensorid: 0                                                    # only one sensor

        visualize: false

    odometry:
      preintegration:
        type: lidar.odometry_preintegration

        gyro_noise: [0.07,0.07,0.07]
        # gyro_noise: [1.0,1.0,1.0]

      icp:
        type: lidar.odometry_icp

        # continuous time estimation
        use_trajectory_estimation: true
        traj_num_extra_states: 0
        traj_lock_prev_pose: false
        traj_lock_prev_vel: false
        # traj_qc_diag: [50.0, 50.0, 50.0, 5.0, 5.0, 5.0]
        # traj_qc_diag: [1.0, 0.0001, 0.0001, 0.0001, 0.0001, 0.01] # good
        traj_qc_diag: [1.0, 0.0001, 0.0001, 0.01, 0.01, 0.01] # good

        use_radial_velocity: false
        rv_cov: 1.0
        rv_loss_threshold: 1.0

        use_velocity_prior: false
        vp_cov: [1000.0, 0.001, 1000.0, 1000.0, 1000.0, 1000.0]

        # ICP parameters
        num_threads: 10
        first_num_steps: 3
        initial_max_iter: 6
        initial_max_pairing_dist: 3.0
        initial_max_planar_dist: 1.0
        refined_max_iter: 60
        refined_max_pairing_dist: 1.0
        refined_max_planar_dist: 0.3
        averaging_num_steps: 3
        # steam parameters
        verbose: false
        max_iterations: 1

        # thresholds
        min_matched_ratio: 0.0
        max_trans_vel_diff: 1.0    # m/s
        max_rot_vel_diff: 1000.0    # m/s
        max_trans_diff: 1000.0      # m
        max_rot_diff: 1000.0        # rad

        visualize: false

      doppler:
        type: lidar.odometry_doppler

        #
        use_trajectory_estimation: true
        traj_lock_prev_pose: false
        traj_lock_prev_vel: false
        traj_qc_diag: [1.0, 0.001, 0.001, 0.001, 0.001, 1.0]

        # doppler odom parameters
        num_threads: 1
        ransac_seed: 0
        ransac_gyro: false
        ransac_max_iter: 100
        ransac_threshold: 0.2
        prior_threshold: 3.0      # m/s
        ransac_min_range: 8.0      # m
        integration_steps: 100
        zero_vel_tol: 0.03
        #
        P0inv: [1e4, 1e4, 1e4, 1e6, 1e6, 1e6]
        Qkinv: [124.097194, 852.430330017, 448.704299478, 1128.19639192, 1230.02908934, 11316.9459369]
        Qzinv: [0.0, 100.0, 100.0, 33271.2755284, 20032.1558168, 0.0]
        #
        max_trans_vel_diff: 1.0    # m/s
        max_rot_vel_diff: 1000.0    # m/s
        max_trans_diff: 1000.0      # m
        max_rot_diff: 1000.0        # rad

      mapping:
        type: lidar.odometry_map_maintenance_v2

        map_voxel_size: 0.3

        crop_range_front: 100.0
        back_over_front_ratio: 1.0

        point_life_time: 10.0

        visualize: false

      vertex_test:
        type: lidar.vertex_test

        max_translation: 1.0
        max_rotation: 10.0

      memory:
        type: "live_mem_manager"

        window_size: 5 # unload data older than this many keyframes

    localization:
      recall:
        type: lidar.localization_map_recall

        map_version: "pointmap"

        visualize: false

      icp:
        type: lidar.localization_icp

        use_pose_prior: true

        # ICP parameters
        num_threads: 10
        first_num_steps: 3
        initial_max_iter: 6
        initial_max_pairing_dist: 5.0
        initial_max_planar_dist: 1.0
        refined_max_iter: 40
        refined_max_pairing_dist: 1.0
        refined_max_planar_dist: 0.3
        averaging_num_steps: 3

        # steam parameters
        verbose: false
        max_iterations: 1

        # threshold
        min_matched_ratio: 0.3

      memory:
        type: "graph_mem_manager"

        vertex_life_span: 5
        window_size: 3